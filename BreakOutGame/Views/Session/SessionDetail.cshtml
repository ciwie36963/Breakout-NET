@using BreakOutGame.Extensions
@using BreakOutGame.Models.Domain
@using BreakOutGame.Util
@using Microsoft.AspNetCore.Mvc.Rendering
@model BreakOutGame.Models.Domain.BoBSession
@{
    ViewData["Title"] = "SessionDetailScreen";
}
<h2 class="sessieDetailFix">Detail @Model.name</h2>
<div class="row">
    <div class="col-md-12 actiesFix">
       
        <h3>Sessie acties</h3>
        <div>
            <form method="post" class="form-inlineblock" asp-action="StartSession">
                <input id="startS" type="submit" class="btn btn-primary btn-lg zelfde" value="Start Session" @(Model.Groups.All(g => g.Status == GroupStatus.Locked) && Model.SessionStatus != SessionStatus.Started ? "" : "disabled") title="Alle groepen moeten vergrendeld zijn">
            </form>
            @if (Model.AreActionsEnabled || Model.IsDistant)
            {
                <form method="post" class="form-inlineblock" asp-action="DisableActions">
                    <input type="submit" class="btn btn-success btn-lg zelfde" value="Zet acties uit" @(Model.IsDistant ? "disabled" : "")>
                </form>
            }
            else
            {
                <form method="post" class="form-inlineblock" asp-action="EnableActions">
                    <input type="submit" class="btn btn-success btn-lg zelfde" value="Zet acties aan">
                </form>
            }
            @if (!Model.IsFreeJoinEnabled)
            {
                <form method="post" class="form-inlineblock" asp-action="EnableFreeJoin">
                    <input type="submit" class="btn btn-success btn-lg zelfde" value="Zelf invullen aanzetten">
                </form>
            }
            else
            {
                <form method="post" class="form-inlineblock" asp-action="DisableFreeJoin">
                    <input type="submit" class="btn btn-success btn-lg zelfde" value="Zelf invullen uitzetten">
                </form>
            }
        </div>
        <form method="post" class="form-inlineblock" asp-controller="BoBGroup" asp-action="BlockAllGroups">
            <input type="submit"  class="btn btn-danger btn-lg zelfde" value="Blokkeer alle groepen">
        </form>
        <form method="post" class="form-inlineblock" asp-controller="BoBGroup" asp-action="DeblockAllGroups">
            <input type='submit' class="btn btn-success btn-lg zelfde" value="Deblokkeer alle groepen">
        </form>
    </div>
 
</div>

<div class="col-md-12">
  
</div>

<div id="accordion" class="col-md-12">
    <div>
        <h3>Details</h3>
        <p>Sessie voor klas: @Model.StudentClass.ClassName</p>
        <p>Is voor afstandsleren? @(Model.IsDistant ? "Ja" : "Nee")</p>
        <p>Is feedback aan? @(Model.IsFeedbackEnabled ? "Ja" : "Nee")</p>
        <p>Aantal groepen: @Model.Groups.Count()</p>
        @{
            var counterA = 1;
            foreach (var action in Model.Actions)
            {
                var a = action.Action;

                <p>Actie @(counterA++): @a.Action</p>
            }
        }
    </div> 
    @foreach (var group in Model.Groups.OrderBy(g => g.GroupName, new GroupNameComparer()))
    {
        <div class="card">
            <div class="card-header" id="@($"hgroup" + group.Id)">
                <h5 class="mb-0">
                    <button id=@("title"+ group.Id) class="btn btn-link opendiv" data-toggle="collapse" data-target="@("#group" + group.Id)" aria-expanded="true" aria-controls="@("group" + group.Id)">
                        @group.GroupName is momenteel @group.Status.FormatString() @(group.Path.Assignments.OrderBy(a => a.ReferenceNr).FirstOrDefault(a=> a.Status != AssignmentStatus.Completed) != null ? "en zit momenteel aan oefening " + group.Path.Assignments.OrderBy(a => a.ReferenceNr).FirstOrDefault(a => a.Status != AssignmentStatus.Completed).ReferenceNr : " is klaar met alles")
                    </button>
                </h5>
            </div>

            <div id="@("group" + group.Id)" class="collapse" aria-labelledby="@("hgroup" + group.Id)" data-parent="#accordion">
                <div class="card-body">
                    <h3>Details</h3>
                    @await Html.PartialAsync("../BoBGroup/_GroupMembers", group)
                    <h3>Vooruitgang</h3>
                    <div id="@("progress"+group.Id)">
                        @foreach (var assignment in group.Path.Assignments)
                        {
                            <p>Vraag @assignment.ReferenceNr: @assignment.Exercise.Name, Fouten: @assignment.WrongCount, Status: @assignment.Status.FormatString()</p>
                        }
                    </div>

                    <div>
                        @{
                           
                                
                                    <div @(group.Status != GroupStatus.Blocked ? "hidden" : "") id="@(group.Id+"s"+(int)GroupStatus.Blocked)" class="@("actionG"+group.Id)">
                                        <form method="post" class="form-inlinebloc float-rightk" asp-controller="BoBGroup" asp-action="DeblockGroup" asp-route-groupid="@group.Id">
                                            <input type='submit' class="btn btn-primary btn-space float-right" value="Deblokkeer groep">
                                        </form>
                                    </div>
                                  
                            
                                    <div @(group.Status != GroupStatus.Locked ? "hidden" : "") id="@(group.Id+"s"+(int)GroupStatus.Locked)"class="@("actionG"+group.Id)">
                                    <form method="post" class="form-inlineblock float-right" asp-controller="BoBGroup" asp-action="BlockGroup" asp-route-groupid="@group.Id">
                                        <input type='submit' class="btn btn-primary btn-space float-right" value="Blokkeer groep">
                                        </form> 
                                    </div>
                                   
                              
                                    <div @(group.Status != GroupStatus.Selected ? "hidden" : "") id="@(group.Id+"s"+ (int)GroupStatus.Selected)"class="@("actionG"+group.Id)">
                                        <form method="post" class="form-inlineblock float-right" asp-controller="BoBGroup" asp-action="LockGroup" asp-route-groupid="@group.Id">
                                            <input type='submit' class="btn btn-primary btn-space float-right" value="Vergrendel groep">
                                        </form>
                                    </div>
                                   
                             
                                    <!-- Button trigger modal -->
                                    <div @(group.Status != GroupStatus.NotSelected ? "hidden" : "") id="@(group.Id+"s"+ (int)GroupStatus.NotSelected)"class="@("actionG"+group.Id)">
                                        <button type="button" class="btn btn-primary btn-space float-right btn-modal" data-toggle="modal" data-target="#@("modal" +group.Id)">
                                            Vergrendel groep
                                        </button>
                                    </div>
                                    <!-- Modal -->
                                    <div class="modal fade" id="@("modal" +group.Id)" tabindex="-1" role="dialog" aria-labelledby="@("modaltitle" +group.Id)" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="@("modaltitle" +group.Id)">Opgelet!</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    Deze groep is nog niet gekozen! Ben je zeker dat je deze groep wilt vergrendelen?
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary btn-modal-close" data-dismiss="modal">Terug</button>
                                                    <form method="post" class="form-inlineblock" asp-controller="BoBGroup" asp-action="LockGroup" asp-route-groupId="@group.Id">
                                                        <input type='submit' class="btn btn-success btn-lg zelfde" value="Vergrendel groep">
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                            }
                        
                    </div>
                </div>

            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
     /*   var doingstuff = false;
        var scrolling = false;
       
        setInterval(function () {
            if (!doingstuff && !scrolling) {
                location.reload();
            }
           
        }, 3000);
        
        $(".btn-modal").click(function() {
            doingstuff = true;
        }); 
        $(".btn-modal-close").click(function() {
            doingstuff = false;
        }); 
        $(window).scroll(function () {
            scrolling = true;
            clearTimeout($.data(this, 'scrollTimer'));
            $.data(this, 'scrollTimer', setTimeout(function() {
                scrolling = false;
                console.log("Haven't scrolled in 500ms!");
            }, 500));
        });*/
     $(window).scroll(function () {
         sessionStorage.scrollTop = $(this).scrollTop();
     });
     window.onload = function () {
         var opendiv = sessionStorage.getItem("opendiv");
         $(opendiv).addClass("show");
         $("#accordion").find(".opendiv").click(function () {
             var currentOpen = sessionStorage.getItem("opendiv");
             var groupId = $(this).attr('data-target');
             console.log(currentOpen);
             console.log(groupId);
             if (currentOpen != groupId) {
                 sessionStorage.setItem('opendiv', groupId);
             } else {
                 sessionStorage.setItem('opendiv', null);
             }
         });
         if (sessionStorage.scrollTop != "undefined") {
             $(window).scrollTop(sessionStorage.scrollTop);
         }
     }
     function getStatus(status) {
         switch(status) {
         case 3:
             return " geblokkeerd";
         case 2:
             return " vergrendeld";
         case 0:
             return " nog niet gekozen";
         case 1:
             return " geselecteerd";
         default:
             return " onbekend";
         }
     }

     function getAssignmentStatus(status) {

         switch(status) {
         case 1:
             return "Voltooid";
         case 0:
             return "Nog niet voltooid";
         case 2:
             return "Invoeren toegangscode";
         default:
             return null;
         }
     }

     function getNextAssignmentString(group, assigments) {
         var nextAssignment;
         $.each(assigments, function(i, assignment) {
            
             $("#progress"+group.id).append("<p>Vraag " + assignment.referenceNr + ": "  + assignment.exercise.name + ", Fouten: " + assignment.wrongCount + ", Status: " + getAssignmentStatus(assignment.status)+ "</p>");
             if(assignment.status != 1) {
                 nextAssignment = assignment;	
             }
         });
         if(nextAssignment != null) {
             return " en zit momenteel aan oefening "+ nextAssignment.referenceNr;
         }
         return " is klaar met alles";
        }

     var allLocked = true;
     setInterval(function () {
         $.get('SessionInfo', function(data) {
             $.each(data.groups, function(i, group) {
                 if (group.status != 2) {
                     allLocked = false;
                 }
                 $(".actionG" + group.id).filter(function () {
                     return this.id != group.id+"s"+group.status;
                 }).hide();
                 
                 $("#" + group.id + "s" + group.status).show();
                 $("#" + group.id + "s" + group.status).removeAttr("hidden");
            
                 $("#progress"+group.id).empty();
                 $("#title"+group.id).text(group.groupName + " is momenteel " + getStatus(group.status) + getNextAssignmentString(group, group.path.assignments));
		

             });
             if (allLocked && data.status != 3) {
                 $("#startS").prop("disabled", false);
             }
             allLocked = true;
         });
           
     }, 3000);  
    </script>
}